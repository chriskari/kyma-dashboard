kind: ConfigMap
apiVersion: v1
metadata:
  name: certificates.cert.gardener.cloud
  namespace: kube-public
  labels:
    app.kubernetes.io/name: certificates.cert.gardener.cloud
    busola.io/extension: resource
    busola.io/extension-version: '0.5'
data:
  details: |
    header:
      - name: Status
        source: 'status.state ? status.state : "UNKNOWN"'
        highlights:
          informative:
          - UNKNOWN
        widget: Badge
        description: status.message
      - name: Expiration Date
        source: status.expirationDate
      - name: Common Name
        source: spec.commonName
    body:
      - name: References
        widget: Panel
        children:
          - name: Issuer
            source: status.issuerRef.name
          - name: Secret
            source: spec.secretRef.name
          - name: CSR
            source: spec.csr
          - name: Renew
            source: spec.renew
          - name: DNS Names
            source: spec.dnsNames
            widget: Labels
  form: |
    - var: useCSR
      dynamicValue: 'false'
      simple: true
      type: boolean
      name: Use a CSR
    - var: encode
      dynamicValue: 'false'
      simple: true
      type: boolean
      name: '$encode ? "Encode" : Decode'
      visibility: $useCSR
    - simple: true
      path: spec.commonName
      required: true
      placeholder: Certificate CN (max 64 characters)
      visibility: "$useCSR = false"
    - simple: true
      path: spec.csr
      name: CSR
      required: true
      placeholder: '$encode ? "Base64-encoded Certificate Signing Request" : "Plain text Certificate Signing Request"'
      visibility: "$useCSR"
    - path: spec.dnsNames
      name: DNS Names
      widget: SimpleList
      children:
        - path: '[]'
      placeholder: Additional domain names, one per line
    - name: Issuer
      path: spec.issuerRef
      required: false
      widget: ResourceRef      
      resource:
        kind: Secret
        version: v1
    - path: spec.renew
    - var: useExistingSecret
      dynamicValue: 'false'
      type: boolean
      name: Use the existing Secret
    - path: spec.secretName
      visibility: "$useExistingSecret = false"
    - name: Secret to use
      path: spec.secretRef
      widget: ResourceRef      
      provideVar: secret
      resource:
        kind: Secret
        version: v1
      defaultExpanded: true
      required: true 
      visibility: "$useExistingSecret"
  general: |
    resource:
      kind: Certificate
      group: cert.gardener.cloud
      version: v1alpha1
    name: Certificates
    category: Configuration
    urlPath: certificates
    scope: namespace
    description: >-
      {{[Certificate](https://cert-manager.io/docs/concepts/certificate/)}}
      provides a definition of a certificate that is then processed by the indicated issuer.
  list: |
    - name: Common Name
      source: status.commonName
    - name: Issuer
      source: status.issuerRef.name
    - name: Expiration Date
      source: status.expirationDate
    - name: Status
      source: 'status.state ? status.state : "UNKNOWN"'
      highlights:
        informative:
        - UNKNOWN
      widget: Badge
      description: status.message
  translations: |
    en:
      metadata.annotations: Annotations
      metadata.labels: Labels
      metadata.creationTimestamp: Created at
